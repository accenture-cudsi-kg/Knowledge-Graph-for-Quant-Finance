# -*- coding: utf-8 -*-
"""Stanford-IEEE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HWry2BG2UXUJz2AWt7gd-g2Manafyrur
"""

# Commented out IPython magic to ensure Python compatibility.
# https://stackoverflow.com/questions/61657805/stanford-openie-in-google-colab. //FOR REFERENCE
# %pip install stanford_openie

# Install JAVA
import os       #importing os to set environment variable
def install_java():
  !apt-get install -y openjdk-8-jdk-headless -qq > /dev/null      #install openjdk
  os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-8-openjdk-amd64"     #set environment variable
  !java -version       #check java version
install_java()

from google.colab import drive
drive.mount('/content/drive')
!pip install stanza

import os
os.environ["CORENLP_HOME"] = '/content/drive/MyDrive/stanford-corenlp-full-2018-10-05'

# Commented out IPython magic to ensure Python compatibility.
import stanza
# Import client module
from stanza.server import CoreNLPClient

# %env NO_PROXY='localhost'
# %env no_proxy='localhost'
client = CoreNLPClient(timeout=150000000, be_quiet=True, annotators=['openie'], endpoint='http://localhost:9001')
client.start()
import time
time.sleep(10)

text = '''When the Bank of England announced last week that it would buy bonds in unlimited quantities in an effort to stabilize the market for U.K. government debt, economists agreed it was probably a necessary move to prevent a cataclysmic financial crisis. They also worried it could set a dangerous precedent. Central banks defend the financial stability of the nations in which they operate. In an era of highly leveraged and deeply interconnected markets, that means that they sometimes have to buy bonds or backstop lending to prevent a problem in one area from spiraling into a crisis that threatens the entire financial system.'''
document = client.annotate(text, output_format='json', )
triples = []
for sentence in document['sentences']:
    for triple in sentence['openie']:
        triples.append({
           'subject': triple['subject'],
           'relation': triple['relation'],
            'object': triple['object']
        })
print(triples)